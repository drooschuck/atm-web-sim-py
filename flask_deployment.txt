# Procfile (for Heroku deployment)
web: python app.py

---

# runtime.txt (for Heroku - specify Python version)
python-3.11.0

---

# .gitignore
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Flask
instance/
.webassets-cache

# Data files
data/
*.json
*.db
*.sqlite
*.sqlite3

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

---

# app.yaml (for Google App Engine)
runtime: python311

env_variables:
  SECRET_KEY: "your-secret-key-for-production"

---

# railway.toml (for Railway deployment)
[build]
builder = "NIXPACKS"

[deploy]
healthcheckPath = "/"
restartPolicyType = "ON_FAILURE"

[[services]]
name = "web"
source = "."

---

# docker-compose.yml (for Docker deployment)
version: '3.8'

services:
  atm-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-secret-key-here
    volumes:
      - ./data:/app/data
    restart: unless-stopped

---

# Dockerfile (for containerization)
FROM python:3.11-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

RUN mkdir -p data

EXPOSE 5000

CMD ["python", "app.py"]